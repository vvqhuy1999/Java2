/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LAB7;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Logger;

/**
 *
 * @author admin
 */
public class FClient extends javax.swing.JFrame implements Runnable {

   /**
    * Creates new form Client
    */
   public Socket socket;
   public DataOutputStream dataoutputStream;
   public DataInputStream datainputStream;
   public FClient() {
      initComponents();
      this.setTitle("Client"); //tieu de
      //this.setSize(445,500); // khung
      this.setResizable(false); // co kich thuoc
      //this.getContentPane().setBackground(Color.orange); // chinh mau
      this.setLocationRelativeTo(null); // chinh o giua
   }

   public void connectServer(){
      txtClient.setText("connecting.......");
      btnConnect.setEnabled(false);
      try{
         socket = new Socket("localhost",9998);
         txtClient.setText("connectted");
         Thread t = new Thread(FClient.this);
         t.start();
      }catch(IOException ex)
      {
         //Logger.getLogger(FServer.class.getName()).log(Level.SEVERE, null, ex);
         Logger.getLogger(FServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
   }
   
   public void sendMessage(){
      try{
         dataoutputStream = new DataOutputStream(socket.getOutputStream());
         dataoutputStream.writeUTF(txtClient.getText());
      }catch(Exception e){
         //System.out.println(e);
      }
   }
   
   public void run(){
      String mnString;
      while(true){
         try{
            if(socket != null){
               try{
                  datainputStream = new DataInputStream(socket.getInputStream());
                  mnString = datainputStream.readUTF();
                  //System.out.println(mnString);
                  //txtServer.setText(mnString);
                  txtServer.append(mnString + "\n");
               }catch (IOException ex){
                  Logger.getLogger(FServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
               }
            }
            Thread.sleep(10);
         }catch (InterruptedException ex){
            Logger.getLogger(FServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         }
      }
   }
   
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel1 = new javax.swing.JLabel();
      txtPort = new javax.swing.JTextField();
      btnConnect = new javax.swing.JButton();
      txtClient = new javax.swing.JTextField();
      btnSend = new javax.swing.JButton();
      jLabel2 = new javax.swing.JLabel();
      jScrollPane1 = new javax.swing.JScrollPane();
      txtServer = new javax.swing.JTextArea();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jLabel1.setText("Port No.");

      btnConnect.setText("Connect");
      btnConnect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnConnectActionPerformed(evt);
         }
      });

      btnSend.setText("Send");
      btnSend.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSendActionPerformed(evt);
         }
      });

      jLabel2.setText("Server :");

      txtServer.setColumns(20);
      txtServer.setRows(5);
      jScrollPane1.setViewportView(txtServer);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(28, 28, 28)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(35, 35, 35)
                  .addComponent(btnConnect))
               .addGroup(layout.createSequentialGroup()
                  .addComponent(txtClient, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(btnSend))
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(103, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(24, 24, 24)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnConnect))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(txtClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnSend))
            .addGap(37, 37, 37)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(63, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
      // TODO add your handling code here:
      
      sendMessage();
   }//GEN-LAST:event_btnSendActionPerformed

   private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
      // TODO add your handling code here:
      connectServer();
   }//GEN-LAST:event_btnConnectActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(FClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(FClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(FClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(FClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new FClient().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnConnect;
   private javax.swing.JButton btnSend;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextField txtClient;
   private javax.swing.JTextField txtPort;
   private javax.swing.JTextArea txtServer;
   // End of variables declaration//GEN-END:variables
}
